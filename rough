private String translateDim(String strLine) {
    // Form is: dim variable_name as data_type
    strLine = strLine.trim();
    String[] words = G.splitSpace(strLine);

    if (words.length < 2) {
        return "*" + strLine + newline;  // Not a valid Dim declaration
    }

    String vbIdentifier = words[1];
    String identifier = getVariableName(words[1]);
    String dataType = "";
    String misc = "";

    if (words.length > 3) {
        if (words[2].equalsIgnoreCase("as")) {
            dataType = words[3];
            for (int i = 4; i < words.length; i++) {
                misc += " " + words[i];
            }
        } else {
            return "*" + strLine + newline;  // Invalid Dim declaration
        }
    }

    if (dataType.isEmpty()) {
        dataType = getObjectTypeName();
    }
    dataType = getDataType(dataType);

    identifier = getCairoVariableName(identifier);

    Variable var = new Variable();
    var.setJavaName(identifier);
    var.setVbName(vbIdentifier);
    var.setType(dataType);
    m_functionVariables.add(var);

    if (identifier.contains("(")) {
        words = G.split(identifier);
        if (words.length > 3) {
            dataType += "[" + words[2] + "]";
        } else {
            dataType += "[]";
        }
        dataType = "var";
        return dataType + " " + identifier + " = new " + dataType + "();" + misc + newline;
    } else {
        dataType = "var";
        return dataType + " " + identifier + " = " + getZeroValueForDataType(dataType) + ";" + misc + newline;
    }
}







private String translateDim(String strLine) {
    // form is
    // dim variable_name as data_type
    strLine = strLine.trim();
    String[] words = G.splitSpace(strLine);

    if (words.length < 2) {
        return "*" + strLine + newline;  // Not a valid Dim declaration
    }

    String vbIdentifier = words[1];
    String identifier = getVariableName(words[1]);
    String dataType = "";
    String misc = "";

    if (words.length > 3) {
        if (words[2].equalsIgnoreCase("as")) {
            dataType = words[3];
            for (int i = 4; i < words.length; i++) {
                misc += " " + words[i];
            }
        } else {
            return "*" + strLine + newline;  // Invalid Dim declaration
        }
    }

    if (dataType.isEmpty()) {
        dataType = getObjectTypeName();
    }
    dataType = getDataType(dataType);

    if (m_translateToCairo) {
        identifier = translateVarNameToCairo(identifier);
    }

    identifier = getCairoVariableName(identifier);

    Variable var = new Variable();
    var.setJavaName(identifier);
    var.setVbName(vbIdentifier);
    var.setType(dataType);
    m_functionVariables.add(var);

    if (identifier.contains("(")) {
        words = G.split(identifier);
        if (words.length > 3) {
            dataType += "[" + words[2] + "]";
        } else {
            dataType += "[]";
        }
        dataType = m_translateToCairo ? "var" : dataType;
        return dataType + " " + identifier + " = null;" + misc + newline;
    } else {
        dataType = m_translateToCairo ? "var" : dataType;
        return dataType + " " + identifier + " = " + getZeroValueForDataType(dataType) + ";" + misc + newline;
    }
}






private String translateDim(String strLine) {
    // form is
    // dim variable_name as data_type
    strLine = strLine.trim();
    String[] words = G.splitSpace(strLine);
    String dataType = "";
    String vbIdentifier = "";
    String identifier = "";
    String misc = "";

    if (words.length > 1) {
        vbIdentifier = words[1];
        identifier = getVariableName(words[1]);
        if (words.length > 3) {
            dataType = words[3];
        }
        for (int i = 4; i < words.length; i++) {
            misc += " " + words[i];
        }
    }

    if (dataType.isEmpty()) {
        dataType = getObjectTypeName();
    }

    dataType = getDataType(dataType);

    if (m_translateToCairo) {
        identifier = translateVarNameToCairo(identifier);
    }

    identifier = getCairoVariableName(identifier);

    Variable var = new Variable();
    var.setJavaName(identifier);
    var.setVbName(vbIdentifier);
    var.setType(dataType);
    m_functionVariables.add(var);

    // Check if it's an object instantiation
    if (misc.contains("New")) {
        // Java code for object instantiation
        return dataType + " " + identifier + " = new " + dataType + "();" + misc + newline;
    } else {
        // Regular variable declaration
        return dataType + " " + identifier + " = " + getZeroValueForDataType(dataType) + ";" + misc + newline;
    }
}



private String translateDim(String strLine) {
    // form is
    // dim variable_name as data_type
    strLine = strLine.trim();
    String[] words = G.splitSpace(strLine);

    if (words.length < 2) {
        return "*" + strLine + newline;  // Not a valid Dim declaration
    }

    String vbIdentifier = words[1];
    String identifier = getVariableName(words[1]);
    String dataType = "";

    if (words.length > 3) {
        dataType = words[3];
    }

    String misc = "";
    for (int i = 4; i < words.length; i++) {
        misc += " " + words[i];
    }

    if (dataType.isEmpty()) {
        dataType = getObjectTypeName();
    }
    dataType = getDataType(dataType);

    Variable var = new Variable();
    var.setJavaName(identifier);
    var.setVbName(vbIdentifier);
    var.setType(dataType);
    m_functionVariables.add(var);

    if (!misc.isEmpty() && misc.contains("New")) {
        return dataType + " " + identifier + " = new " + dataType + "();" + misc + newline;
    } else if (identifier.contains("(")) {
        words = G.split(identifier);
        if (words.length > 3) {
            dataType += "[" + words[2] + "]";
        } else {
            dataType += "[]";
        }
        dataType = m_translateToCairo ? "var" : dataType;
        return dataType + " " + identifier + " = null;" + misc + newline;
    } else {
        dataType = m_translateToCairo ? "var" : dataType;
        return dataType + " " + identifier + " = "
                + getZeroValueForDataType(dataType) + ";" + misc + newline;
    }
}




private String translateDim(String strLine) {
    // Form is: Dim variable_name As New data_type
    strLine = strLine.trim();
    String[] words = G.splitSpace(strLine);

    if (words.length < 5 || !words[3].equalsIgnoreCase("New")) {
        return "*" + strLine + newline;  // Not a valid Dim declaration
    }

    String vbIdentifier = words[1];
    String identifier = getVariableName(vbIdentifier);
    String dataType = words[4];

    Variable var = new Variable();
    var.setJavaName(identifier);
    var.setVbName(vbIdentifier);
    var.setType(dataType);
    m_functionVariables.add(var);

    return dataType + " " + identifier + " = new " + dataType + "();" + newline;
}





Private Sub cmdBrowse_Click()
    ' Browse for Drive/Folder
    On Error GoTo PROC_ERR
    Const cstrCurrentProc   As String = "cmdBrowse_Click"
    Dim brfFolder           As New cbrfBrowseFolder
    Dim strFolderName       As String


 private void cmdBrowse_Click() {
    // Browse for Drive/Folder
    try {
      "cmdBrowse_Click"
.equals(Const cstrCurrentProc As String);
      New brfFolder = null; cbrfBrowseFolder
      String strFolderName = "";


private String translateCodeAux(String strLine, boolean inDeclaration) {

        // get out spaces even tabs
        //
        String workLine = G.ltrimTab(strLine).toLowerCase();

        //check for Const declaration
        if(inDeclaration && workLine.contains("const "))
        {
            return translateConstDeclaration(strLine);
        }

        // dim
        if (workLine.length() > 4) {
            if (workLine.substring(0,4).equals("dim ")) {
                return translateDim(strLine);
            }
        }


private String translateDim(String strLine) {
        // form is
            // dim variable_name as data_type
        strLine = strLine.trim();
        String[] words = G.splitSpace(strLine);//strLine.split("\\s+");
        String dataType = "";
        String vbIdentifier = "";
        String identifier = "";
        String misc = "";

        if (words.length > 1) {
            vbIdentifier = words[1];
            identifier = getVariableName(words[1]);
            if (words.length > 3) {
                dataType = words[3];
            }
            for (int i = 4; i < words.length; i++) {
                misc += " " + words[i] ;
            }
        }
        if (dataType.isEmpty()) {
            dataType = getObjectTypeName();
        }
        dataType = getDataType(dataType);

        if (m_translateToCairo) {
            identifier = translateVarNameToCairo(identifier);
        }
        
        identifier = getCairoVariableName(identifier);
        
        Variable var = new Variable();
        var.setJavaName(identifier);
        var.setVbName(vbIdentifier);
        var.setType(dataType);
        m_functionVariables.add(var);

        if (identifier.contains("(")) {
            words = G.split(identifier);
            if (words.length > 3) {
                dataType += "[" + words[2] + "]";
            }
            else {
                dataType += "[]";
            }
            dataType = m_translateToCairo ? "var" : dataType;
            return dataType + " " + identifier + " = null;" + misc + newline;
        }
        else {
            dataType = m_translateToCairo ? "var" : dataType;
            return dataType + " " + identifier + " = "
                    + getZeroValueForDataType(dataType) + ";" + misc + newline;
        }
    }



 Fault in variable declaration and definition 

Eg. 

Dim brfFolder           As New cbrfBrowseFolder  

Converted code -> New brfFolder = null; cbrfBrowseFolder 
